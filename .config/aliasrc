alias dotfiles='git --git-dir=$HOME/.dotfiles --work-tree=$HOME'

alias nv=nvim

# ls aliases
alias ls='ls -G'
alias ll='ls -lh'
alias la='ls -A'
alias l='ls -CF'

# watch
# https://unix.stackexchange.com/questions/25327/watch-command-alias-expansion
alias watch='watch '

# git
alias g='git'

# docker
alias d='docker'
alias dps="docker ps --format 'table {{ \"\x1b[33;1m$\x1b[0m\" }} {{ .ID }} \t {{ printf \"%.15s\" .Names }} \t {{ printf \"%.15s\" .Image }} \t {{.Status}} \t {{.Ports}}'"

# kubernetes
alias k='kubectl'
alias kcfg='$HOME/sh/kcfg_load.sh'
alias klvflow='$HOME/sh/kctl_vflow_logs.sh'
alias kctx='k config use-content'
alias kns='k config set-context --current --namespace'
alias kgp='k get po'
alias kgpf='k get po | grep pipeline'
alias kgpg='k get po | grep graph'

# Uber
## upanel
alias up='cd $UPANEL'
alias ub='(cd $UPANEL && make build)'
alias ut='(cd $UPANEL && make test)'
alias urr='(trap "kill 0" SIGINT; cd $UPANEL && direnv allow . && eval "$(direnv export bash)" && direnv status && cerberus >> /tmp/cerberus.log 2>&1 & make wonka >> /tmp/wonka.log 2>&1 & wait)'
alias ur='(trap "kill 0" SIGINT; cd $UPANEL && direnv allow . && eval "$(direnv export bash)" && direnv status && cerberus >> /tmp/cerberus.log 2>&1 & make wonka >> /tmp/wonka.log 2>&1 & make MONOREPO_BASE=$GOMONOREPO run)'
alias ud='(trap "kill 0" SIGINT; cd $UPANEL && direnv allow . && eval "$(direnv export bash)" && direnv status && cerberus >> /tmp/cerberus.log 2>&1 & make wonka >> /tmp/wonka.log 2>&1 & make MONOREPO_BASE=$GOMONOREPO debug)'
alias updb='(trap "kill 0" SIGINT; echo "starting cerberus" && cerberus -s grail-deployment-storage --no-status-page >> /tmp/cerberus.log 2>&1 & sleep 10 && storage credential -t soadbmysql -i recon1 -d recon1 && echo "" && $GOMONOREPO/src/code.uber.internal/infra/soadbmysql/scripts/tunnel_for_cluster.sh recon1 primary)'
alias updbprod='(trap "kill 0" SIGINT; echo "starting cerberus" && cerberus -s grail-deployment-storage --no-status-page >> /tmp/cerberus.log 2>&1 & sleep 10 && storage credential -t soadbmysql -i recon -d recon && echo "" && $GOMONOREPO/src/code.uber.internal/infra/soadbmysql/scripts/tunnel_for_cluster.sh recon primary)'

## scout-hire
alias cdsh='cd $SCOUTHIRE'
alias shb='(cd $SCOUTHIRE && make build)'
alias sht='(cd $SCOUTHIRE && make test)'
alias shrr='(trap "kill 0" SIGINT; cd $SCOUTHIRE && direnv allow . && eval "$(direnv export bash)" && direnv status && cerberus >> /tmp/cerberus.log 2>&1 & wait)'
alias shr='(trap "kill 0" SIGINT; cd $SCOUTHIRE && direnv allow . && eval "$(direnv export bash)" && direnv status && cerberus >> /tmp/cerberus.log 2>&1 & make run)'
alias shdb='(trap "kill 0" SIGINT; echo "starting cerberus" && cerberus -s grail-deployment-storage --no-status-page >> /tmp/cerberus.log 2>&1 & sleep 10 && storage credential -t soadbmysql -i scout_hire_experimental -d scout_hire_experimental && echo "" && $GOMONOREPO/src/code.uber.internal/infra/soadbmysql/scripts/tunnel_for_cluster.sh scout_hire_experimental primary)'

## devpod
alias dp='devpod'
alias dpgo='ssh $DEVPOD_GO'
alias dpweb='ssh $DEVPOD_WEB'
